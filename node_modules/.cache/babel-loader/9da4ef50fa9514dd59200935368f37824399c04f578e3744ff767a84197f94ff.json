{"ast":null,"code":"var _jsxFileName = \"/home/tech-avnash/Desktop/project/messenger-toolkit/src/Components/MessageList.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MessageList(_ref) {\n  let {\n    messages,\n    editingMessageId,\n    editingMessageContent,\n    handleEdit,\n    handleSaveEdit,\n    handleDelete\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"text\",\n    children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-container\",\n      children: message.sender === \"user1\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          children: editingMessageId === message.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editingMessageContent,\n              onChange: e => setEditingMessageContent(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSaveEdit(editingMessageId, editingMessageContent),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [editingMessageId !== message.id && /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(message.id, message.content),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(message.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          children: editingMessageId === message.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editingMessageContent,\n              onChange: e => setEditingMessageContent(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSaveEdit(editingMessageId, editingMessageContent),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [editingMessageId !== message.id && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEdit(message.id, message.content),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(message.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = MessageList;\nexport default MessageList;\nvar _c;\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","MessageList","_ref","messages","editingMessageId","editingMessageContent","handleEdit","handleSaveEdit","handleDelete","className","children","map","message","sender","id","type","value","onChange","e","setEditingMessageContent","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","content","_c","$RefreshReg$"],"sources":["/home/tech-avnash/Desktop/project/messenger-toolkit/src/Components/MessageList.js"],"sourcesContent":["import React from \"react\";\n\nfunction MessageList({ messages, editingMessageId, editingMessageContent, handleEdit, handleSaveEdit, handleDelete }) {\n\n\n    \n  return (\n    <ul className=\"text\">\n      {messages.map((message) => (\n        <div key={message.id} className=\"message-container\">\n          {message.sender === \"user1\" ? (\n            <div className=\"message-left\">\n              <div className=\"box\">\n                {editingMessageId === message.id ? (\n                  <>\n                    <input\n                      type=\"text\"\n                      value={editingMessageContent}\n                      onChange={(e) => setEditingMessageContent(e.target.value)}\n                    />\n                    <button\n                      onClick={() =>\n                        handleSaveEdit(editingMessageId, editingMessageContent)\n                      }\n                    >\n                      Save\n                    </button>\n                  </>\n                ) : (\n                  message.content\n                )}\n              </div>\n              <div className=\"buttons\">\n                {editingMessageId !== message.id && (\n                  <li>\n                    {\" \"}\n                    <button onClick={() => handleEdit(message.id, message.content)}>\n                      Edit\n                    </button>\n                  </li>\n                )}\n                <li>\n                  {\" \"}\n                  <button onClick={() => handleDelete(message.id)}>Delete</button>\n                </li>\n              </div>\n            </div>\n          ) : (\n            <div className=\"message-right\">\n              <div className=\"box\">\n                {editingMessageId === message.id ? (\n                  <>\n                    <input\n                      type=\"text\"\n                      value={editingMessageContent}\n                      onChange={(e) => setEditingMessageContent(e.target.value)}\n                    />\n                    <button\n                      onClick={() =>\n                        handleSaveEdit(editingMessageId, editingMessageContent)\n                      }\n                    >\n                      Save\n                    </button>\n                  </>\n                ) : (\n                  message.content\n                )}\n              </div>\n              <div className=\"buttons\">\n                {editingMessageId !== message.id && (\n                  <button onClick={() => handleEdit(message.id, message.content)}>\n                    Edit\n                  </button>\n                )}\n                <button onClick={() => handleDelete(message.id)}>Delete</button>\n              </div>\n            </div>\n          )}\n        </div>\n      ))}\n    </ul>\n  );\n}\n\nexport default MessageList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}