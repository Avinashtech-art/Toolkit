{"ast":null,"code":"var _jsxFileName = \"/home/tech-avnash/Desktop/project/messenger-toolkit/src/Components/ChatSidebar.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatSidebar() {\n  _s();\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  const handleSelectMessage = messageId => {\n    setSelectedMessage(messageId);\n  };\n\n  // your code for rendering the message list and message fields goes here\n  const messages = [{\n    id: 1,\n    text: 'Message 1'\n  }, {\n    id: 2,\n    text: 'Message 2'\n  }, {\n    id: 3,\n    text: 'Message 3'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleSelectMessage(message.id),\n      style: {\n        background: selectedMessage === message.id ? 'blue' : 'white'\n      },\n      children: message.text\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatSidebar, \"vEf6ZGp+kJ2uSZvcmJ1v8MeDnEQ=\");\n_c = ChatSidebar;\nexport default ChatSidebar;\nvar _c;\n$RefreshReg$(_c, \"ChatSidebar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ChatSidebar","_s","selectedMessage","setSelectedMessage","useState","handleSelectMessage","messageId","messages","id","text","children","map","message","onClick","style","background","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/tech-avnash/Desktop/project/messenger-toolkit/src/Components/ChatSidebar.js"],"sourcesContent":["import React from 'react'\n\nfunction ChatSidebar() {\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  \n  const handleSelectMessage = (messageId) => {\n    setSelectedMessage(messageId);\n  }\n  \n  // your code for rendering the message list and message fields goes here\n  const messages = [    { id: 1, text: 'Message 1' },    { id: 2, text: 'Message 2' },    { id: 3, text: 'Message 3' },  ];\n  \n  return (\n    <div>\n      {messages.map(message => (\n        <div key={message.id} onClick={() => handleSelectMessage(message.id)} style={{ background: selectedMessage === message.id ? 'blue' : 'white' }}>\n          {message.text}\n        </div>\n      ))}\n    </div>\n  );\n}\n\n\nexport default ChatSidebar\n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAMC,mBAAmB,GAAIC,SAAS,IAAK;IACzCH,kBAAkB,CAACG,SAAS,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAG,CAAK;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAY,CAAC,EAAK;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAY,CAAC,EAAK;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAY,CAAC,CAAI;EAExH,oBACEV,OAAA;IAAAW,QAAA,EACGH,QAAQ,CAACI,GAAG,CAACC,OAAO,iBACnBb,OAAA;MAAsBc,OAAO,EAAEA,CAAA,KAAMR,mBAAmB,CAACO,OAAO,CAACJ,EAAE,CAAE;MAACM,KAAK,EAAE;QAAEC,UAAU,EAAEb,eAAe,KAAKU,OAAO,CAACJ,EAAE,GAAG,MAAM,GAAG;MAAQ,CAAE;MAAAE,QAAA,EAC5IE,OAAO,CAACH;IAAI,GADLG,OAAO,CAACJ,EAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAGrB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAAClB,EAAA,CAnBQD,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AAsBpB,eAAeA,WAAW;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}