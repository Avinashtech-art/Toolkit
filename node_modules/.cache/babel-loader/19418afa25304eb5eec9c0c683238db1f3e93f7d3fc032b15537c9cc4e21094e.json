{"ast":null,"code":"var _jsxFileName = \"/home/tech-avnash/Desktop/project/messenger-toolkit/src/Components/ChatSidebar.js\",\n  _s = $RefreshSig$();\n// import React from 'react'\n// import  { useState } from \"react\";\n// function ChatSidebar() {\n//   const [selectedMessage, setSelectedMessage] = useState(null);\n\n//   const handleSelectMessage = (messageId) => {\n//     setSelectedMessage(messageId);\n//   }\n\n//   // your code for rendering the message list and message fields goes here\n//   const messages = [    { id: 1, text: 'Message 1' },    { id: 2, text: 'Message 2' },    { id: 3, text: 'Message 3' },  ];\n\n//   return (\n//     <div>\n//       {messages.map(message => (\n//         <div key={message.id} onClick={() => handleSelectMessage(message.id)} style={{ background: selectedMessage === message.id ? 'blue' : 'white' }}>\n//           {message.text}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default ChatSidebar\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatSidebar(_ref) {\n  _s();\n  let {\n    onMessageSelect\n  } = _ref;\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  const handleSelectMessage = messageId => {\n    setSelectedMessage(messageId);\n    onMessageSelect(messageId); // call the callback function\n  };\n\n  // your code for rendering the message list and message fields goes here\n  const messages = [{\n    id: 1,\n    text: \"Message 1\"\n  }, {\n    id: 2,\n    text: \"Message 2\"\n  }, {\n    id: 3,\n    text: \"Message 3\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleSelectMessage(message.id),\n      style: {\n        background: selectedMessage === message.id ? \"blue\" : \"white\"\n      },\n      children: message.text\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatSidebar, \"vEf6ZGp+kJ2uSZvcmJ1v8MeDnEQ=\");\n_c = ChatSidebar;\nexport default ChatSidebar;\nvar _c;\n$RefreshReg$(_c, \"ChatSidebar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatSidebar","_ref","_s","onMessageSelect","selectedMessage","setSelectedMessage","handleSelectMessage","messageId","messages","id","text","children","map","message","onClick","style","background","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/tech-avnash/Desktop/project/messenger-toolkit/src/Components/ChatSidebar.js"],"sourcesContent":["// import React from 'react'\n// import  { useState } from \"react\";\n// function ChatSidebar() {\n//   const [selectedMessage, setSelectedMessage] = useState(null);\n  \n//   const handleSelectMessage = (messageId) => {\n//     setSelectedMessage(messageId);\n//   }\n  \n//   // your code for rendering the message list and message fields goes here\n//   const messages = [    { id: 1, text: 'Message 1' },    { id: 2, text: 'Message 2' },    { id: 3, text: 'Message 3' },  ];\n  \n//   return (\n//     <div>\n//       {messages.map(message => (\n//         <div key={message.id} onClick={() => handleSelectMessage(message.id)} style={{ background: selectedMessage === message.id ? 'blue' : 'white' }}>\n//           {message.text}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n\n// export default ChatSidebar\n\n\n\nimport React, { useState } from \"react\";\n\nfunction ChatSidebar({ onMessageSelect }) {\n  const [selectedMessage, setSelectedMessage] = useState(null);\n\n  const handleSelectMessage = (messageId) => {\n    setSelectedMessage(messageId);\n    onMessageSelect(messageId); // call the callback function\n  };\n\n  // your code for rendering the message list and message fields goes here\n  const messages = [\n    { id: 1, text: \"Message 1\" },\n    { id: 2, text: \"Message 2\" },\n    { id: 3, text: \"Message 3\" },\n  ];\n\n  return (\n    <div>\n      {messages.map((message) => (\n        <div\n          key={message.id}\n          onClick={() => handleSelectMessage(message.id)}\n          style={{ background: selectedMessage === message.id ? \"blue\" : \"white\" }}\n        >\n          {message.text}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ChatSidebar;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,WAAWA,CAAAC,IAAA,EAAsB;EAAAC,EAAA;EAAA,IAArB;IAAEC;EAAgB,CAAC,GAAAF,IAAA;EACtC,MAAM,CAACG,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAMS,mBAAmB,GAAIC,SAAS,IAAK;IACzCF,kBAAkB,CAACE,SAAS,CAAC;IAC7BJ,eAAe,CAACI,SAAS,CAAC,CAAC,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAG,CACf;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAY,CAAC,EAC5B;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAY,CAAC,EAC5B;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAY,CAAC,CAC7B;EAED,oBACEX,OAAA;IAAAY,QAAA,EACGH,QAAQ,CAACI,GAAG,CAAEC,OAAO,iBACpBd,OAAA;MAEEe,OAAO,EAAEA,CAAA,KAAMR,mBAAmB,CAACO,OAAO,CAACJ,EAAE,CAAE;MAC/CM,KAAK,EAAE;QAAEC,UAAU,EAAEZ,eAAe,KAAKS,OAAO,CAACJ,EAAE,GAAG,MAAM,GAAG;MAAQ,CAAE;MAAAE,QAAA,EAExEE,OAAO,CAACH;IAAI,GAJRG,OAAO,CAACJ,EAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAMlB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAAClB,EAAA,CA5BQF,WAAW;AAAAqB,EAAA,GAAXrB,WAAW;AA8BpB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}